name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        neovim_version: ['stable', 'nightly']

    steps:
    - uses: actions/checkout@v4

    - name: Install Neovim
      uses: rhysd/action-setup-vim@v1
      with:
        neovim: true
        version: ${{ matrix.neovim_version }}

    - name: Install Lua
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: "5.1"

    - name: Install Luarocks
      uses: leafo/gh-actions-luarocks@v4

    - name: Install dependencies
      run: |
        luarocks install busted
        luarocks install luacov
        luarocks install luassert

    - name: Setup test environment
      run: |
        mkdir -p ~/.local/share/nvim/site/pack/deps/start
        mkdir -p ~/.cache/nvim
        # Create minimal test dependencies
        mkdir -p tests/deps
        echo "-- Mock plenary for testing" > tests/deps/plenary.lua
        # Set up proper XDG directories for headless mode
        export XDG_DATA_HOME="$HOME/.local/share"
        export XDG_CONFIG_HOME="$HOME/.config"
        export XDG_CACHE_HOME="$HOME/.cache"

    - name: Run tests
      run: |
        export XDG_DATA_HOME="$HOME/.local/share"
        export XDG_CONFIG_HOME="$HOME/.config"
        export XDG_CACHE_HOME="$HOME/.cache"
        busted --verbose --output=gtest
      continue-on-error: false

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.neovim_version }}
        path: |
          *.xml
          *.log

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Stylua (lint)
      uses: JohnnyMorganz/stylua-action@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: latest
        args: --check .
      continue-on-error: true

  doc:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate documentation
      uses: kdheepak/panvimdoc@main
      with:
        vimdoc: todo-lens
        version: "Neovim >= 0.7.0"
        demojify: true
        treesitter: true
      continue-on-error: true

    - name: Push changes
      uses: stefanzweifel/git-auto-commit-action@v5
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        commit_message: "auto: update documentation"
        branch: main 